users.ts/routes
import express from 'express';
import mysql from 'mysql2/promise';

const router = express.Router();
const db = mysql.createPool({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'teste_db',
});

router.get('/', async (req, res) => {
  const [rows] = await db.query('SELECT * FROM users');
  res.json(rows);
});

router.get('/:id', async (req, res) => {
  const id = Number(req.params.id);
  const [rows] = await db.query('SELECT * FROM users WHERE id = ?', [id]);

  if ((rows as any[]).length === 0) {
    return res.status(404).json({ message: 'Usuário não encontrado' });
  }

  res.json(rows[0]);
});

router.post('/', async (req, res) => {
  const { name, email } = req.body;
  await db.query('INSERT INTO users (name, email) VALUES (?, ?)', [name, email]);
  res.status(201).json({ message: 'Usuário criado' });
});

// PUT /users/:id
router.put('/:id', async (req, res) => {
  const id = Number(req.params.id);
  const { name, email } = req.body;
  const [result] = await db.query('UPDATE users SET name = ?, email = ? WHERE id = ?', [name, email, id]);

  if ((result as any).affectedRows === 0) {
    return res.status(404).json({ message: 'Usuário não encontrado' });
  }

  res.json({ message: 'Usuário atualizado' });
});

// DELETE /users/:id
router.delete('/:id', async (req, res) => {
  const id = Number(req.params.id);
  const [result] = await db.query('DELETE FROM users WHERE id = ?', [id]);

  if ((result as any).affectedRows === 0) {
    return res.status(404).json({ message: 'Usuário não encontrado' });
  }

  res.json({ message: 'Usuário deletado' });
});


export default router;
